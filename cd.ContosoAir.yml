# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

resources: 
  pipelines:
  - pipeline: buildContosoAir # identifier 
    source: hongltMDT.ContosoAir # name of pipeline
    trigger:
      branch: 
        include:
          - master
pool:
  vmImage: ubuntu-latest

steps:
- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: 'd713e079-9915-449b-ad69-3603719f4416'
    definition: '6'
    buildVersionToDownload: 'latest'
    targetPath: '$(Pipeline.Workspace)'
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'TailspinDemo_serviceconnection'
    subscriptionId: '90765980-529c-468f-b40e-7eee08ef2bcd'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'Medtronic-Demo-HongLi'
    location: 'East US'
    templateLocation: 'Linked artifact'
    csmFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.json'
    csmParametersFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.parameters.json'
    overrideParameters: '-p_environment $(web_environment) -p_site_prefix $(web_prefix) -p_site_web_name $(web_site)'
    deploymentMode: 'Incremental'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'TailspinDemo_serviceconnection'
    appType: 'webApp'
    WebAppName: '$(web_prefix)-$(web_site)-$(web_environment)'
    packageForLinux: '$(Pipeline.Workspace)/**/*.zip'